https://code.visualstudio.com/
https://nodejs.org/en/
https://github.com/
https://www.mongodb.com/
(Setup locally /over cloud)
https://dashboard.heroku.com/
https://redis.io/download
https://docs.docker.com/docker-for-windows/install/

Basic JavaScript
NPM
Basic NodeJS(in built)(Os,file,http)
NodeJS(full Stack App) (Node-EJS-Mongo-Express)
Third Party Api (Weather Api)
Node-Es6(.babel)
Github
Redis  > 6379
Email With Node(Sendgrid)
MongoDb Basic
////////////////////////////
Api with NodeJS(Rest)
DashBoard(Crud)
OO_NodeJs
Oauth(with github)

Login/Logout(JWT)
Testing
NodeJs with postgres
Pm2
Heroku
GraphQl API
ChatApp
Production 
Docker
Nginx

///////////////////////////////////////////
Node> Async single thread non block I/O
code =>bit
V8

/////////////////////
NPM
Node Package Manager
https://www.npmjs.com/

JSON> javaScript Object Notation
[
    {
        id:1,
        name:"John",
        class:"Node"
    },
    {
        id:2,
        name:"Alvin",
        class:"UI"
    }
]

///////////////////
package.json

> starting point
> cmd to start,stop,dev,build
> packages
> meta data> name,version,author

>>>>><<<<<<<<
Step to create package.json
>>>>>>>><<<<<<<<
**NodeJs must be installed in system
> go inside the folder using cmd/terminal
>type "npm init"
>answer all question
>type "yes"


>>>>>>>>>><<<<<<<<
Package
>>>>>>>>>><<<<<<<<

local dependency
global dependency
dev dependency


>>>>>>>>>><<<<<<<<
How to install local package
>>>>>>>>>><<<<<<<<
> go inside the folder using cmd/terminal
> npm i packagename


local dependency
> local to the folder
> max dependency will install locally

global dependency
> This will install in my system
> it need admin access to install
> it doesnot add in package.json
> package that help to build/generate/run

>>>>>>>>>><<<<<<<<
How to install gloabl package
>>>>>>>>>><<<<<<<<
#windows
> open cmd as admin
> npm i -g packagename

Please email your online related queries to onlinetraining@nareshit.com, or Call/Whatsapp us on +91-8179191999.
#Mac/linux
> open termainl
> sudo npm i -g packagename

sudo npm i -g @aakashdeveloper/create-node-app

//////
Step to generate node app
///////
#windows
> open cmd as admin
> npm i -g @aakashdeveloper/create-node-app

#Mac/linux
> open termainl
> sudo npm i -g @aakashdeveloper/create-node-app

>>>Go Inside folder where you want to generate
>>>generate
>>> select node-app
>>> appname

///Automatically restart
npm i -g nodemon


template engine
EJS



function add(a,b){

}

add(1,2)

https://www.mongodb.com/
> go to the bin folder
> type mongod( it will start mongodb server)
> in new command prompt 
> go to the bin folder
> type mongo(it will start mongo client)

/////////////////////////////////////////////
rollno | hindi | english | Computer
1      | 80    |         |
2      |       | 80      |
3      | 80    |         | 80


[
    {
        rollno:1,
        hindi:80
    },
    {
        rollno:2,
        english:80
    },
    {
        rollno:3,
        hindi:80,
        Computer:80
    }
]

////////////////////////////////////////
Sql                 MongoDb
database            database
table               collection
row                 document
3306                27017
///////
to see all database
>show dbs
# To Create new database
> use dbname
# to create table/insert record
> db.city.insert({name:'Delhi',country:'India'})
> db.city.insert({name:'Helsinki',country:'Finland'})
> db.student.insert({name:'John',country:'USA'})

db.city.insert({_id:1,name:'Mumbai',country:'India'})
db.city.insert({_id:2,name:'Venice',country:'Italy'})
db.city.insert({_id:3,name:'Amsterdam',country:'Netherlands'})

db.city.insertMany([
    {_id:4,name:'Nice',country:'France'},
    {_id:5,name:'Innburg',country:'Austria'}
])

# To See all the collection
> show collections

# To See all the data
(select * from city)
> db.city.find({})
> db.city.find({country:'India',name:'Delhi'})
> db.hotels.find().pretty()

>>>Delete with condition
db.users.remove({_id:87897878})

>> Delete all record
db.users.remove({})

>>>>>>update
db.users.update(
    {_id:1},
    {
        $set:{
           country:'India'
        }
    }
)

>>>>> update +insert => upsert
db.users.update(
    {_id:122},
    {
        $set:{
        name:'lisa',
        city:'Boston',
        country:'India'
        }
    },
    {upsert:true}
)

npm i @babel/core @babel/preset-env @babel/register

>>>>First time from new folder<<<<<<<<
git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/testsep.git
git push -u origin master

>>>>Every next time<<<<<<<<
git add .
git commit -m "first commit"
git push

//////
redis

>>> set key value
>>> get key
>>> KEYS *
>>>

Crud
create    > post
read      > get 
update    > put
delete    > delete

npm i body-parser express ejs mongodb cors chai chai-http mocha